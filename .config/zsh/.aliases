# shellcheck shell=bash

if command -v brew >/dev/null 2>&1; then
  alias ls="ls -G"
  alias grep="grep -G"
  alias fgrep="fgrep -G"
  alias egrep="egrep -G"
else
  alias ls="ls --color=auto"
  alias grep="grep --color=auto"
  alias fgrep="fgrep --color=auto"
  alias egrep="egrep --color=auto"
fi

alias ll="ls -alF"
alias la="ls -A"
alias l="ls -CF"

alias sz='. ${ZDOTDIR}/.zprofile && . ${ZDOTDIR}/.zshrc'
alias SZ='tmux-shell-cmd --kill "sz"'
alias dt='cd ${DOTFILES_PATH} && nvim .'
alias lz='cd ${HOME}/.local/share/nvim/lazy/LazyVim && nvim .'
alias lp='cd ${HOME}/.local/share/nvim/lazy && nvim .'

alias drun='docker container run --rm -it -v "${PWD}":/app -w /app'

alias rmpyc="find . -type d -name '__pycache__' -exec rm -rf {} \;"

alias jek="RUBYOPT='-W0' bundle exec jekyll serve --config _config.yml,_config.dev.yml --drafts --livereload"

alias ymp3="youtube-dl --extract-audio --audio-format mp3"

alias octal="stat -c '%a %n'"

alias follow="namei -om"

alias diff="diff --color -u"

alias 755d="find . -type d -exec chmod 755 {} \;"

alias 644f="find . -type f -exec chmod 644 {} \;"

if ! command -v brew >/dev/null 2>&1; then
  alias open="/mnt/c/Program\ Files\ \(x86\)/Google/Chrome/Application/chrome.exe"
  alias wopen="cmd.exe /C start 2> /dev/null"
fi

alias vss='sort -u ${HOME}/.config/nvim/spell/en.utf-8.add -o ${HOME}/.config/nvim/spell/en.utf-8.add'

alias vdt='rm ${HOME}/.local/state/nvim/swap/%*'

alias gi="git init && git symbolic-ref HEAD refs/heads/main"

# shellcheck disable=SC2139
alias pf="fzf ${FZF_CTRL_T_OPTS}"

alias gcl="git diff --name-only --diff-filter=U"

alias ge="rg '[\p{Emoji}--\p{Ascii}]'"

alias myip="curl -s -4 https://ifconfig.me | tee >(clip-copy)"

alias start-rec="start-recording && HISTSIZE=0"
alias stop-rec='stop-recording && HISTSIZE=${SAVEHIST} && fc -R'

alias k="kubectl"
alias tf="terraform"

# A way to define and run tasks in a project. It's like make except it's pure
# Bash so there's no make limitations like not being able to forward arguments.
alias run=./run

# This is specific to WSL 2. If the WSL 2 VM goes rogue and decides not to free
# up memory, this command will free your memory after about 20-30 seconds.
#   Details: https://github.com/microsoft/WSL/issues/4166#issuecomment-628493643
alias drop_cache="sudo sh -c \"echo 3 >'/proc/sys/vm/drop_caches' && swapoff -a && swapon -a && printf '\n%s\n' 'Ram-cache and Swap Cleared'\""
